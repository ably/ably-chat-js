name: Build and test

on:
  pull_request:
  push:
    branches:
      - main

env:
  BASE_NODE_VERSION: 24

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - run: npm ci
      - run: npm audit --production
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - run: npm ci
      - run: npm run format:check
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - run: npm ci
      - run: npm run lint
  test-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - run: npm ci
      - run: npm run test:typescript
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22, 24]
    name: test node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test -- --coverage
        name: test with coverage
        if: ${{ matrix.node-version == env.BASE_NODE_VERSION }}
      - run: npm run test
        name: test
        if: ${{ matrix.node-version != env.BASE_NODE_VERSION }}
      - uses: davelosert/vitest-coverage-report-action@v2
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'ably/ably-chat-js' && matrix.node-version == env.BASE_NODE_VERSION && (failure() || success()) }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - run: npm ci
      - run: npm run build
  demo-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.BASE_NODE_VERSION }}
      - name: npm ci (lib)
        run: npm ci
      - name: npm build (lib)
        run: npm run build
      - name: npm ci (demo)
        run: npm ci
        working-directory: demo
      - name: npm ci (ably-token-request)
        run: npm ci
        working-directory: demo/api/ably-token-request
      - name: 'npm build (demo)'
        run: npm run build
        working-directory: demo
